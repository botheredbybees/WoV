# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg

# PyInstaller
# Â Usually these files are written by a python script from a template
# Â before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
.python-version

# celery beat schedule file
celerybeat-schedule

# dotenv
.env
.env.*.local

# virtualenv
venv/
ENV/
env/
env.bak/
venv.bak/

# VS Code
.vscode/

# Node / NPM
node_modules/

# Docker
**/docker-compose.override.yml
**/docker-compose.override.yaml
# Keep .env files specific to the root and frontend .env as separate rules
# **/.env (Already covered by .env at root, and frontend/.env will be handled by the new rule below)
# **/.env.local (Generic, might catch files not intended)
# **/.env.*.local (Generic, might catch files not intended)
**/__pycache__/
**/*.py[cod]
**/.pytest_cache/
**/.DS_Store # Keep this general for all directories
**/dist/ # Keep this general for all directories
**/build/ # Keep this general for all directories

# New or updated rules for Frontend (SvelteKit) ðŸš€
frontend/node_modules/ # Crucial for SvelteKit projects
frontend/.svelte-kit/ # SvelteKit's build output and internal files
frontend/package-lock.json # Or yarn.lock/pnpm-lock.yaml if used
frontend/.env # Frontend specific .env file
frontend/.env.development # Example for development specific frontend env
frontend/.env.production # Example for production specific frontend env
frontend/.env.* # Catches other frontend .env variants

# General build/output folders that might appear in subdirectories (redundant if already covered by root rules like /dist/ but good for clarity)
# For example, if 'dist/' or 'build/' might appear inside 'frontend/' and need specific exclusion.
# If you have `dist/` and `build/` at the project root already in .gitignore,
# then `frontend/dist/` and `frontend/build/` are already covered by `**/dist/` and `**/build/`.

# Local deployment artifacts
.supabase/

# SvelteKit/Node Build Artifacts and Dependencies
frontend/node_modules/
frontend/.svelte-kit/
frontend/.vite/                 # if you see this
frontend/dist/
frontend/build/
frontend/package-lock.json       # Ignore lock files unless you want deterministic builds
frontend/yarn.lock
frontend/pnpm-lock.yaml

# SvelteKit Environment variables (never commit sensitive or per-env config)
frontend/.env
frontend/.env.*
# If you want to version example config, use .env.example

# IDE/editor settings (common)
frontend/.vscode/
frontend/.idea/

# Mac/Linux/Windows system files
.DS_Store
Thumbs.db

# OS-wide build caches
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# Ignore Supabase local instance state (if the frontend mounts it)
.supabase/
